(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{414:function(s,a,t){"use strict";t.r(a);var e=t(27),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"frontmatter-title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[s._v("#")]),s._v(" "+s._s(s.$frontmatter.title))]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#preparation"}},[s._v("Preparation")])]),t("li",[t("a",{attrs:{href:"#install-gitlab"}},[s._v("Install GitLab")])]),t("li",[t("a",{attrs:{href:"#update-gitlab"}},[s._v("Update GitLab")])]),t("li",[t("a",{attrs:{href:"#backup-gitlab"}},[s._v("Backup Gitlab")])]),t("li",[t("a",{attrs:{href:"#troubleshoot-gitlab"}},[s._v("Troubleshoot GitLab")])]),t("li",[t("a",{attrs:{href:"#install-gitlab-runner"}},[s._v("Install GitLab Runner")])]),t("li",[t("a",{attrs:{href:"#update-gitlab-runner"}},[s._v("Update GitLab Runner")])]),t("li",[t("a",{attrs:{href:"#install-gitlab-pages"}},[s._v("Install GitLab Pages")])]),t("li",[t("a",{attrs:{href:"#resources"}},[s._v("Resources")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"preparation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#preparation"}},[s._v("#")]),s._v(" Preparation")]),s._v(" "),t("p",[t("em",[s._v("Prerequisites")])]),s._v(" "),t("p",[s._v("In that article for "),t("code",[s._v("GitLab")]),s._v(" and "),t("code",[s._v("GitLab CI runner")]),s._v(" installation, we should have at least 2 VMs with Linux CentOS 7 or higher with real FQDN defined, with 100Gb of HDD, 4/2 vCPU and 2/4 Gb RAM accordingly, for example:")]),s._v(" "),t("ul",[t("li",[s._v("my-gitlab.my-company.com")]),s._v(" "),t("li",[s._v("my-gitlab-runner.my-company.com")])]),s._v(" "),t("p",[t("em",[s._v("Install required software on both VMs")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LANG=en_US.utf-8"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" --append /etc/environment\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LC_ALL=en_US.utf-8"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" --append /etc/environment\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" epel-release\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("em",[s._v("Optionally, I would prefer to install oh-my-zsh")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("We also must install Docker on both VMs as far we are going to use it everywhere,\nby running GitLab and gitlab-runner and mounting docker data directory for later\nre-use and GitLab upgrades, so next section steps must be performed accordingly\nfor both VMs as well. First, ssh into each of them:")]),s._v(" "),t("ul",[t("li",[s._v("my-gitlab.my-company.com"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" maksim.kostromin@my-gitlab.my-company.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("my-gitlab-runner.my-company.com"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" maksim.kostromin@my-gitlab-runner.my-company.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("p",[s._v("Now install Docker:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove -y docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-client "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-client-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-common "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-latest-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                   docker-engine\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --add-repo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    https://download.docker.com/linux/centos/docker-ce.repo\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yum list docker-ce --showduplicates | sort -r")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce docker-ce-cli containerd.io\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run hello-world\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" -aG docker "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# logout and login again to verify no sudo docker commands works:")]),s._v("\ndocker run hello-world\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h2",{attrs:{id:"install-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-gitlab"}},[s._v("#")]),s._v(" Install GitLab")]),s._v(" "),t("p",[t("em",[s._v("Create required env variables")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/srv/gitlab\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_HOME='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" --append /etc/profile.d/01-setup-GITLAB_HOME-environment-variable.sh\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_OMNIBUS_CONFIG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("gitlab_rails['gitlab_shell_ssh_port'] = 2222; external_url 'http://my-gitlab.my-company.com/'; gitlab_rails['lfs_enabled'] = true;"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_OMNIBUS_CONFIG='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_OMNIBUS_CONFIG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/03-setup-GITLAB_OMNIBUS_CONFIG-environment-variable.sh\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_CE_DOCKER_TAG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13.9")]),s._v(".0-ce.0\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#export GITLAB_DOCKER_TAG=13.9.1-ce.0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_CE_DOCKER_TAG='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_CE_DOCKER_TAG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/02-setup-GITLAB_CE_DOCKER_TAG-environment-variable.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("Always make sure before running any docker commands uses correct actual\n"),t("code",[s._v("GITLAB_HOME")]),s._v(", "),t("code",[s._v("GITLAB_CE_DOCKER_TAG")]),s._v(" and "),t("code",[s._v("GITLAB_OMNIBUS_CONFIG")]),s._v(" environment\nvariables. They all must be already available in your shell! See instructions above")])]),s._v(" "),t("p",[t("em",[s._v("Initially, create data directory, where Docker will be stored all needed information")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" a+rwx "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TODO: FIXME: For security reasons reduce permissions by tweaking \\\nchown and chmod commands after gitlab setup to eliminate unauthorised access \\\nto '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v(" directory, configured via \\"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v(' env variable"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/README\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("GitLab installation using docker:")]),s._v(" "),t("p",[t("em",[s._v("Pull needed tag of gitlab community edition image")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker pull gitlab/gitlab-ce:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_CE_DOCKER_TAG")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("em",[s._v("Remove previously create container if exists")])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),t("p",[s._v("IMPORTANT: Make sure you are not using -v flag to remove container together with volumes!")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f gitlab "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"previous gitlab container of gitlab/gitlab-ce image is not found"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),t("p",[t("em",[s._v("Next code must be executed if you want to clean everything only!")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f -v gitlab "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"previous gitlab container of gitlab/gitlab-ce image is not found"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /srv/gitlab/ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v README"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /srv/gitlab/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("p",[t("em",[s._v("Run concrete version of gitlab server using docker")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker run --detach --restart always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --hostname my-gitlab.my-company.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --publish "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(":443 --publish "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 --publish "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v(":2222 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --volume "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/config:/etc/gitlab:Z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --volume "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/logs:/var/log/gitlab:Z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --volume "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/data:/var/opt/gitlab:Z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_OMNIBUS_CONFIG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_OMNIBUS_CONFIG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name gitlab gitlab/gitlab-ce:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_CE_DOCKER_TAG")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("em",[s._v("Wait and see how gitlab is installing if needed")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker logs -f -t gitlab\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("em",[s._v("If this container fails to start due to permission problems try to fix it by executing")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab update-permissions\ndocker restart gitlab\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("em",[s._v("To make changes in future do not forget to always reconfigure GitLab afterwards")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/gitlab/gitlab.rb\ndocker restart gitlab\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("em",[s._v("Set root password on Web UI first")])]),s._v(" "),t("p",[s._v("Now open "),t("a",{attrs:{href:"http://my-gitlab.my-company.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitLap home page"),t("OutboundLink")],1),s._v(" and setup new password for example to "),t("code",[s._v("Very$ecretp@aaw0rd")]),s._v(" if you are installing it first time or from scratch.")]),s._v(" "),t("p",[t("em",[s._v("Add ssh key")])]),s._v(" "),t("p",[s._v("First, let's generate new key pair for installed gitlab server:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("ssh-keygen -f /path/to/.ssh/my-gitlab-rsa -t rsa -b "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8192")]),s._v(" -N "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" -C "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my-gitlab.my-company.com RSA key"')]),s._v("\nGenerating public/private rsa key pair.\nYour identification has been saved "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /path/to/.ssh/my-gitlab-rsa.\nYour public key has been saved "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /path/to/.ssh/my-gitlab-rsa.pub.\nThe key fingerprint is:\nSHA256:tZf/HU0Jam1E2WJ4a5jEtxil8VRGKcfvBkd3D52SgJ0 my-gitlab.my-company.com RSA key\nThe key's randomart image is:\n+---"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("RSA "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8192")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("----+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("          +o"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("+B"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" E*Xo*"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("          o.O+Bo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v("o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("        S .o+o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("."),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" .+"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("              .o."),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("               .o"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("                o"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+----"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("SHA256"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("-----+\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("Now copy public key into buffer to paste it on GitLab UI later:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /path/to/.ssh/my-gitlab-rsa.pub "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" pbcopy\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"update-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-gitlab"}},[s._v("#")]),s._v(" Update GitLab")]),s._v(" "),t("p",[s._v("Obviously, later, when newer version of GitLab Docker image will be released, sooner\nor later you would like to upgrade it. Because we are relaying on Docker\ninfrastructure when running GitLab, we can easily perform upgrades.")]),s._v(" "),t("p",[s._v("Let's update "),t("code",[s._v("GITLAB_CE_DOCKER_TAG")]),s._v(" env variable with actual GitLab version we\nwould like to work and just with few commands we can quickly perform upgrade\nwith minimal effort:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#export GITLAB_CE_DOCKER_TAG=13.9.0-ce.0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_CE_DOCKER_TAG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13.9")]),s._v(".1-ce.0\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_CE_DOCKER_TAG='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_CE_DOCKER_TAG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/02-setup-GITLAB_CE_DOCKER_TAG-environment-variable.sh\n\ndocker stop gitlab\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" gitlab\n\ndocker pull gitlab/gitlab-ce:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_CE_DOCKER_TAG")]),s._v("\n\ndocker run --detach --restart always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --hostname my-gitlab.my-company.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --publish "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(":443 --publish "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 --publish "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v(":2222 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --volume "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/config:/etc/gitlab:Z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --volume "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/logs:/var/log/gitlab:Z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --volume "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_HOME")]),s._v("/data:/var/opt/gitlab:Z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_OMNIBUS_CONFIG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_OMNIBUS_CONFIG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name gitlab gitlab/gitlab-ce:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_CE_DOCKER_TAG")]),s._v("\n\ndocker logs -f gitlab\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("NOTE: After upgrade your previous MRs may not be workable, so better merge them\nall (or close) before upgrade")])]),s._v(" "),t("h2",{attrs:{id:"backup-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#backup-gitlab"}},[s._v("#")]),s._v(" Backup Gitlab")]),s._v(" "),t("p",[s._v("Out of scope, but maybe later I will update that part of article sd well.\nFor now, read: https://docs.gitlab.com/ee/raketasks/backup_restore.html for details")]),s._v(" "),t("h2",{attrs:{id:"troubleshoot-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshoot-gitlab"}},[s._v("#")]),s._v(" Troubleshoot GitLab")]),s._v(" "),t("p",[s._v("Because we are using Docker we can easily check what is happening inside our GitLab, it's just a Docker container...")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker logs gitlab\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab /bin/bash\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"install-gitlab-runner"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-gitlab-runner"}},[s._v("#")]),s._v(" Install GitLab Runner")]),s._v(" "),t("p",[s._v("Preparation: First of all, make sure you have been done a "),t("a",{attrs:{href:"#preparation"}},[s._v("preparation")]),s._v(" section on top of that document...")]),s._v(" "),t("p",[t("em",[s._v("Obtain required information from here: http://my-gitlab.my-company.com/admin/runners your GitLab instance")])]),s._v(" "),t("p",[s._v("I've got, for example these:")]),s._v(" "),t("ul",[t("li",[s._v("Runner registration URL: "),t("code",[s._v("http://my-gitlab.my-company.com/")])]),s._v(" "),t("li",[s._v("Runner registration token: "),t("code",[s._v("eDNdVaEmAzHijPt4pLnW")])])]),s._v(" "),t("p",[t("em",[s._v("Now again, create required env variables and directories where docker will be storing all the data")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_RUNNER_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/srv/gitlab-runner\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_RUNNER_HOME='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/01-setup-GITLAB_RUNNER_HOME-environment-variable.sh\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" a+rwx "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TODO: FIXME: For security reasons reduce permissions by tweaking chown and chmod commands after gitlab setup to eliminate unauthorised access to '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v(" directory, configured via \\"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v(' env variable"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("/README\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_RUNNER_DOCKER_TAG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ubuntu-v13.8.0\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_RUNNER_DOCKER_TAG='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_DOCKER_TAG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/02-setup-GITLAB_RUNNER_DOCKER_TAG-environment-variable.sh\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_RUNNER_REGISTRATION_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://my-gitlab.my-company.com/"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_RUNNER_REGISTRATION_URL='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_REGISTRATION_URL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/03-setup-GITLAB_RUNNER_REGISTRATION_URL-environment-variable.sh\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_RUNNER_REGISTRATION_TOKEN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("eDNdVaEmAzHijPt4pLnW\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_RUNNER_REGISTRATION_TOKEN='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_REGISTRATION_TOKEN")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/04-setup-GITLAB_RUNNER_REGISTRATION_TOKEN-environment-variable.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[t("em",[s._v("Install gitlab-runner with docker executor, register runner and run it")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chose some: # docker run --rm ... # docker run --restart=unless-stopped ...")]),s._v("\ndocker run --rm --privileged --name gitlab-runner "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v /var/run/docker.sock:/var/run/docker.sock:z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("/config:/etc/gitlab-runner gitlab/gitlab-runner:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_DOCKER_TAG")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                register --non-interactive "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --executor "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --docker-image "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker:20.10.3-dind"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --url "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_REGISTRATION_URL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --registration-token "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_REGISTRATION_TOKEN")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --description "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-runner"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --tag-list "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jbids,docker"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --run-untagged "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --locked"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"false"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --access-level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not_protected"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output: Registering runner... succeeded                     runner=eDNdVaEm")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output: Runner registered successfully. Feel free to start it, but if it's running already the config should be automatically reloaded!")]),s._v("\n\ndocker run --privileged --name gitlab-runner -d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v /var/run/docker.sock:/var/run/docker.sock:z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("/config:/etc/gitlab-runner "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          gitlab/gitlab-runner:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_DOCKER_TAG")]),s._v("\ndocker logs -f -t gitlab-runner\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h2",{attrs:{id:"update-gitlab-runner"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-gitlab-runner"}},[s._v("#")]),s._v(" Update GitLab Runner")]),s._v(" "),t("p",[s._v("Again, as for your GitLab, you also probably would like to perform GitLab\nRunner upgrade... and again, it will be very easy to do, just because we are\nusing Docker! So here step-by-step guide:")]),s._v(" "),t("ul",[t("li",[s._v("Remove registered runner(s) using your GitLab root account on admin Web UI: http://my-gitlab.my-company.com/admin/runners")]),s._v(" "),t("li",[s._v("Login into my-gitlab-runner.my-company.com VM:"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" maksim.kostromin@my-gitlab-runner.my-company.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("Remove current runner docker container:"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f -v gitlab-runner\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("Update environment variable accordingly to desired version you would like to work with:"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("GITLAB_RUNNER_DOCKER_TAG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ubuntu-v13.9.0\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"export GITLAB_RUNNER_DOCKER_TAG='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_DOCKER_TAG")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/profile.d/02-setup-GITLAB_RUNNER_DOCKER_TAG-environment-variable.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[s._v("Finally re-register gitlab-runner and start again!"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker run --rm --privileged --name gitlab-runner "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v /var/run/docker.sock:/var/run/docker.sock:z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("/config:/etc/gitlab-runner gitlab/gitlab-runner:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_DOCKER_TAG")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                register --non-interactive "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --executor "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --docker-image "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker:20.10.3-dind"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --url "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_REGISTRATION_URL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --registration-token "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_REGISTRATION_TOKEN")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --description "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-runner"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --tag-list "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jbids,docker"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --run-untagged "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --locked"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"false"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                          --access-level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not_protected"')]),s._v("\n\ndocker run --privileged --name gitlab-runner -d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v /var/run/docker.sock:/var/run/docker.sock:z "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_HOME")]),s._v("/config:/etc/gitlab-runner "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n          gitlab/gitlab-runner:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GITLAB_RUNNER_DOCKER_TAG")]),s._v("\n\ndocker logs -f -t gitlab-runner\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"install-gitlab-pages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-gitlab-pages"}},[s._v("#")]),s._v(" Install GitLab Pages")]),s._v(" "),t("p",[s._v("It's hard imagine for me to develop software without a documentation. So for\nevery project I'm usually working on I'm always adding README-files or more\ncomprehensive documentation and it's usually regular files or static\nHTML-pages... GitLab can serve static files, all you need to do is simply install\nGitLab Pages.")]),s._v(" "),t("p",[t("em",[s._v("Prerequisites")])]),s._v(" "),t("p",[s._v("To fully complete current article, you have to being able to configure your\ncompany DNS, to add a wildcard A-record: *.my-gitlab-pages.my-company.com. pointing to your `GitLab server IP")]),s._v(" "),t("p",[s._v("First of all, create a wildcard A-record which is going to be pointed to my-gitlab.my-company.com IP (11.22.33.44):")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("*.my-gitlab-pages.my-company.com. 1800 IN A 11.22.33.41\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("So as result, for exampe executing a command:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nslookup")]),s._v(" test1.my-gitlab-pages.my-company.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("will produce some valid result, like this:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Server: dns.google.com\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Address: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.8")]),s._v(".8.8\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Non-authoritative answer:\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Name: my-gitlab.my-company.com\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Address: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.22")]),s._v(".33.44\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Aliases: test1.my-gitlab-pages.my-company.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("Now we can uncomment pages configuration, which is included and commented out by default:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ssh into gitla server")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" maksim.kostromin@my-gitlab.my-company.com\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# go inside gitlab docker container:")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# edit main gitlab configuration file:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/gitlab/gitlab.rb\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment and define pages_external_url to enable GitLab Pages:")]),s._v("\npages_external_url "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://my-gitlab-pages.my-company.com/"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# And change that, because we are using Docker!")]),s._v("\ngitlab_pages"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'inplace_chroot'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# press "ESCAPE" to switch in commands mode')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# type  ":x" to save file and exit')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# press "ENTER"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# now reconfigure gitlab instance:")]),s._v("\ngitlab-ctl reconfigure\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gitlab Reconfigured!")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("Once it's done we can use gitlab pages in our projects!\nNow you should be able to go to gitlab and see Pages section in project where pages deploy task was configured in .gitlab-ci.yml pipeline file...")]),s._v(" "),t("h2",{attrs:{id:"resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[s._v("#")]),s._v(" Resources")]),s._v(" "),t("ul",[t("li",[s._v("https://ohmyz.sh/#install")]),s._v(" "),t("li",[s._v("https://docs.docker.com/engine/install/centos/")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://docs.gitlab.com/omnibus/docker/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Installing GitLab with Docker"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("Comprehensive list of configuration options: Omnibus GitLab readme"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("https://docs.gitlab.com/ee/ci/ssh_keys/")]),s._v(" "),t("li",[s._v("https://docs.gitlab.com/omnibus/docker/#update-gitlab-using-docker-engine")]),s._v(" "),t("li",[s._v("https://docs.gitlab.com/ee/policy/maintenance.html#upgrade-recommendations")]),s._v(" "),t("li",[s._v("https://docs.gitlab.com/runner/install/")]),s._v(" "),t("li",[s._v("https://docs.gitlab.com/ee/administration/pages/index.html")]),s._v(" "),t("li",[s._v("https://www.youtube.com/watch?v=dD8c7WNcc6s")]),s._v(" "),t("li",[s._v("http://my-gitlab.my-company.com/help/ci/yaml/README.md")]),s._v(" "),t("li",[s._v("https://schnuckelig.eu/blog/gitlab-pages-and-bad-gateway-problem-20180516/")])])])}),[],!1,null,null,null);a.default=n.exports}}]);